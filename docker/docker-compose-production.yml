version: '3.7'

networks:
  multihost:
    ipam:
      driver: default
      config:
        - subnet: 11.0.0.0/24

volumes:
  postgres:
  redis:

secrets:
  gom_app_key:
    external: true
  gom_auth0_client_id:
    external: true
  gom_auth0_client_secret:
    external: true
  gom_pg_password:
    external: true
  gom_prisma_secret:
    external: true
  gom_vapid_private_key:
    external: true
  gom_vapid_public_key:
    external: true

services:
  prisma:
    image: prismagraphql/prisma:1.34.10
    ports:
      - '4466:4466'
    environment:
      PRISMA_CONFIG: |
        managementApiSecret: "${PRISMA_MANAGEMENT_API_SECRET:?err}"
        port: 4466
        databases:
          default:
            connector: postgres
            host: postgres
            port: 5432
            user: pggom_connector
            password: "${POSTGRES_PASSWORD:?err}"
            connectionLimit: 2
    deploy:
      placement:
        constraints:
          - node.hostname == prisma-server
      restart_policy:
        condition: any
        delay: 5s
      replicas: 1
      resources:
        limits:
          memory: 500M
    networks:
      - multihost
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  postgres:
    image: postgres:11.5-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: pggom_connector
      #POSTGRES_PASSWORD: prisma
      POSTGRES_PASSWORD_FILE: /run/secrets/gom_pg_password
    volumes:
      - postgres:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.hostname == prisma-server
      restart_policy:
        condition: any
        delay: 5s
      replicas: 1
    networks:
      - multihost
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    secrets:
      - gom_pg_password
  
  redis:
    image: redis:5.0.5-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    deploy:
      placement:
        constraints:
          - node.hostname == node1
      restart_policy:
        condition: any
        delay: 5s
      replicas: 1
    command: [ "redis-server", "--appendonly", "yes" ] # start with persistent storage
    networks:
      - multihost
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  api:
    image: "hecsalazarf/gom-api:${VERSION:?err}"
    ports:
      - '3000:3000'
    environment:
      #APP_KEY: hola
      APP_KEY_FILE: /run/secrets/gom_app_key
      #AUTH0_CLIENT_ID: aOojWYLK4U0XN1S5NB2hNGPhqHkw6eOf
      AUTH0_CLIENT_ID_FILE: /run/secrets/gom_auth0_client_id
      #AUTH0_CLIENT_SECRET: aSSqHDfO0YhovFOLEDdH7Xf2w7vR91w4DX0ybza59OQUV1DeHwZZq5PpShFrPjzJ
      AUTH0_CLIENT_SECRET_FILE: /run/secrets/gom_auth0_client_secret
      #VAPID_PRIVATE_KEY: 4DztwpAycGt6VZ1EwIfxxkIWyqk65AkGWLovcQ56Ns4
      #VAPID_PUBLIC_KEY: BJo1ZeE62MZqVkZN8g9TOSFXOCtxmpmejfId8JpLT5C52ASUqhabfpVpHqQrySWhD0PCgEWohR1vKpbRJ48boWA
      VAPID_PRIVATE_KEY_FILE: /run/secrets/gom_vapid_private_key
      VAPID_PUBLIC_KEY_FILE: /run/secrets/gom_vapid_public_key
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PRISMA_ENDPOINT: http://prisma:4466
      #PRISMA_SECRET: "12345"
      PRISMA_SECRET_FILE: /run/secrets/gom_prisma_secret
    deploy:
      placement:
        constraints:
          - node.hostname == node1
      restart_policy:
        condition: any
        delay: 5s
      replicas: 1
    networks:
      - multihost
    command: [ "pm2-runtime", "start", "ecosystem.config.js", "--env", "staging" ] #Use it only on development or staging environments
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    secrets:
      - gom_app_key
      - gom_auth0_client_id
      - gom_auth0_client_secret
      - gom_prisma_secret
      - gom_vapid_private_key
      - gom_vapid_public_key
