pipeline {
  agent {
    docker {
      image 'hecsalazarf/gomapi-agent:0.1'
      args  '-v /var/run/docker.sock:/var/run/docker.sock' // use same Docker daemon as the host's
    }
  }

  stages {
   stage('Build') {
      steps {
        sh 'npm install'
        echo 'Dependencies installed'
        sh 'npm run prestart:prod'
        echo 'Build completed'
      }
    }

    stage('Deploy') {
      // IMPORTANT: Deployment requires the following Jenkins configurations:
      // * SSH Agent Plugin
      // * SSH username-with-private-key (node1-ssh-private-key) credential to connect to the remote server
      // * SSH user-with-password (node1-ssh-password) credential for sudo operations
      // * Prisma management API secret (prisma-mgmt-secret) credential
      // * Prisma service secret (prisma-service-secret) credential
      // * Postgres password (postgres-prisma) credential
      environment {
        DOCKER_TAG = 'hecsalazarf/gom-api' // Docker image tag
        REMOTE_TEMP_DIR = '/home/hector/gom-api/' // Temporary directory on remote server to put files
        REMOTE_HOST = 'hecsalazarf.sytes.net' // Remote host
        CRED_PRIVATE_KEY = 'node1-ssh-private-key' // Private key credential
        SSH = credentials('node1-ssh-password') // Password credential
        SSH_OPTIONS = '-o StrictHostKeyChecking=no -p 6330'  // SSH options
        // ------------------------------
        PRISMA_MANAGEMENT_API_SECRET = credentials('prisma-mgmt-secret')
        PRISMA_SERVICE_SECRET = credentials('prisma-service-secret')
        PRISMA_SERVICE_ENDPOINT = 'https://hecsalazarf.sytes.net'
        POSTGRES = credentials('postgres-prisma')
      }
      steps {
        sshagent (credentials: [env.CRED_PRIVATE_KEY]) {
          sh 'jenkins/deploy.sh'
          echo 'Deploy completed'
        }
      }
    }
  }
}
